{"version":3,"sources":["components/pages/SingleComicPage.js"],"names":["View","comic","title","description","pageCount","thumbnail","language","price","className","src","alt","to","SingleComicPage","comicId","useParams","useState","setComic","useMarvelService","loading","error","getComic","clearError","useEffect","updateComic","then","onComicLoaded","errorMessage","spinner","content"],"mappings":"2MAwCMA,EAAO,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACLC,EAA6DD,EAA7DC,MAAOC,EAAsDF,EAAtDE,YAAaC,EAAyCH,EAAzCG,UAAWC,EAA8BJ,EAA9BI,UAAWC,EAAmBL,EAAnBK,SAAUC,EAASN,EAATM,MAE3D,OACI,sBAAKC,UAAU,eAAf,UACI,qBAAKC,IAAKJ,EAAWK,IAAKR,EAAOM,UAAU,sBAC3C,sBAAKA,UAAU,qBAAf,UACI,oBAAIA,UAAU,qBAAd,SAAoCN,IACpC,mBAAGM,UAAU,sBAAb,SAAoCL,IACpC,mBAAGK,UAAU,sBAAb,SAAoCJ,IACpC,oBAAGI,UAAU,sBAAb,uBAA8CF,KAC9C,qBAAKE,UAAU,sBAAf,SAAsCD,OAE1C,cAAC,IAAD,CAAMI,GAAG,UAAUH,UAAU,qBAA7B,6BAKII,UAnDS,WACrB,IAAOC,EAAWC,cAAXD,QACP,EAA0BE,mBAAS,MAAnC,mBAAOd,EAAP,KAAce,EAAd,KACA,EAA+CC,cAAxCC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,WAEjCC,qBAAU,WACNC,MACD,CAACV,IAEJ,IAAMU,EAAc,WAChBF,IACAD,EAASP,GACJW,KAAKC,IAGRA,EAAgB,SAACxB,GACnBe,EAASf,IAGPyB,EAAeP,EAAQ,cAAC,IAAD,IAAkB,KACzCQ,EAAUT,EAAU,cAAC,IAAD,IAAa,KACjCU,EAAYV,GAAWC,IAAUlB,EAAiC,KAAxB,cAACD,EAAD,CAAMC,MAAOA,IAE7D,OACI,qCACI,cAAC,IAAD,IACCyB,EACAC,EACAC","file":"static/js/7.920e9a27.chunk.js","sourcesContent":["import \"./singleComic.scss\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useEffect, React, useState } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../Spinner/Spinner\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport AppBanner from \"../appBanner/AppBanner\";\nconst SingleComicPage = () => {\n   const {comicId} = useParams();\n   const [comic, setComic] = useState(null);\n   const {loading, error, getComic, clearError} = useMarvelService();\n\n   useEffect(() => {\n       updateComic()\n   }, [comicId])\n\n   const updateComic = () => {\n       clearError();\n       getComic(comicId)\n           .then(onComicLoaded)\n   }\n\n   const onComicLoaded = (comic) => {\n       setComic(comic);\n   }\n\n   const errorMessage = error ? <ErrorMessage/> : null;\n   const spinner = loading ? <Spinner/> : null;\n   const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\n\n   return (\n       <>\n           <AppBanner/>\n           {errorMessage}\n           {spinner}\n           {content}\n       </>\n   )\n}\n\nconst View = ({comic}) => {\n   const {title, description, pageCount, thumbnail, language, price} = comic;\n\n   return (\n       <div className=\"single-comic\">\n           <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n           <div className=\"single-comic__info\">\n               <h2 className=\"single-comic__name\">{title}</h2>\n               <p className=\"single-comic__descr\">{description}</p>\n               <p className=\"single-comic__descr\">{pageCount}</p>\n               <p className=\"single-comic__descr\">Language: {language}</p>\n               <div className=\"single-comic__price\">{price}</div>\n           </div>\n           <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n       </div>\n   )\n}\n\nexport default SingleComicPage;\n"],"sourceRoot":""}